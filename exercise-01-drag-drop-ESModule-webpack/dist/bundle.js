!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var r,o=function(){function t(t,e,n,r){this.templateElement=document.getElementById(t),this.hostElement=document.getElementById(e);var o=document.importNode(this.templateElement.content,!0);this.element=o.firstElementChild,r&&(this.element.id=r),this.attach(n)}return t.prototype.attach=function(t){this.hostElement.insertAdjacentElement(t?"afterbegin":"beforeend",this.element)},t}();function i(t){var e=t.value,n=t.required,r=t.minLength,o=t.maxLength,i=t.min,u=t.max,c=!0;return n&&(c=c&&0!==e.toString().trim().length),null!=r&&"string"==typeof e&&(console.log(r),c=c&&e.length>=r),null!=o&&"string"==typeof e&&(c=c&&e.length<=o),null!=i&&"number"==typeof e&&(c=c&&e>=i),null!=u&&"number"==typeof e&&(c=c&&e<=u),console.log(c),c}function u(t,e,n){var r=n.value;return{configurable:!0,get:function(){return r.bind(this)}}}!function(t){t[t.Active=0]="Active",t[t.Finished=1]="Finished"}(r||(r={}));var c,s=function(t,e,n,r,o){this.id=t,this.title=e,this.description=n,this.people=r,this.status=o},p=(c=function(t,e){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}c(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),a=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var r=Array(t),o=0;for(e=0;e<n;e++)for(var i=arguments[e],u=0,c=i.length;u<c;u++,o++)r[o]=i[u];return r},l=function(t){function e(){var e=t.call(this)||this;return e.projects=[],e}return p(e,t),e.getInstance=function(){return this.instance||(this.instance=new e),this.instance},e.prototype.addProject=function(t,e,n){var o=new s(Math.random().toString(),t,e,n,r.Active);this.projects.push(o),this.updateListeners()},e.prototype.moveProject=function(t,e){var n=this.projects.find((function(e){return e.id===t}));n&&n.status!==e&&(n.status=e,this.updateListeners())},e.prototype.updateListeners=function(){for(var t=0,e=this.listeners;t<e.length;t++){(0,e[t])(a(this.projects))}},e}(function(){function t(){this.listeners=[]}return t.prototype.addListener=function(t){this.listeners.push(t)},t}()).getInstance(),f=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),d=function(t,e,n,r){var o,i=arguments.length,u=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,e,n,r);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(u=(i<3?o(u):i>3?o(e,n,u):o(e,n))||u);return i>3&&u&&Object.defineProperty(e,n,u),u},h=function(t){function e(){var e=t.call(this,"project-input","app",!0,"user-input")||this;return e.titleInputElement=e.element.querySelector("#title"),e.descriptionInputElement=e.element.querySelector("#description"),e.peopleInputElement=e.element.querySelector("#people"),e.configure(),e}return f(e,t),e.prototype.configure=function(){this.element.addEventListener("submit",this.submitHandler)},e.prototype.renderContent=function(){},e.prototype.gatherUserInput=function(){var t=this.titleInputElement.value,e=this.descriptionInputElement.value,n=this.peopleInputElement.value,r={value:e,required:!0,minLength:5},o={value:+n,required:!0,min:1};return i({value:t,required:!0})&&i(r)&&i(o)?[t,e,+n]:void alert("Invalid Input, please try again!")},e.prototype.clearInputs=function(){this.titleInputElement.value="",this.descriptionInputElement.value="",this.peopleInputElement.value=""},e.prototype.submitHandler=function(t){t.preventDefault();var e=this.gatherUserInput();if(Array.isArray(e)){var n=e[0],r=e[1],o=e[2];l.addProject(n,r,o),this.clearInputs()}},d([u],e.prototype,"submitHandler",null),e}(o),y=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),v=function(t){function e(e,n){var r=t.call(this,"single-project",e,!1,n.id)||this;return r.project=n,r.configure(),r.renderContent(),r}return y(e,t),Object.defineProperty(e.prototype,"persons",{get:function(){return 1===this.project.people?"1 pserson":this.project.people+" persons"},enumerable:!1,configurable:!0}),e.prototype.dragStartHandler=function(t){t.dataTransfer.setData("text/plain",this.project.id),t.dataTransfer.effectAllowed="move"},e.prototype.dragEndHandler=function(t){},e.prototype.configure=function(){this.element.addEventListener("dragstart",this.dragStartHandler.bind(this)),this.element.addEventListener("dragend",this.dragEndHandler.bind(this))},e.prototype.renderContent=function(){this.element.querySelector("h2").textContent=this.project.title,this.element.querySelector("h3").textContent=this.persons+" assigned",this.element.querySelector("p").textContent=this.project.description},e}(o),m=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),g=function(t,e,n,r){var o,i=arguments.length,u=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,e,n,r);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(u=(i<3?o(u):i>3?o(e,n,u):o(e,n))||u);return i>3&&u&&Object.defineProperty(e,n,u),u},j=function(t){function e(e){var n=t.call(this,"project-list","app",!1,e+"-projects")||this;return n.type=e,n.assignedProjects=[],n.configure(),n.renderContent(),n}return m(e,t),e.prototype.dragOverHandler=function(t){t.dataTransfer&&"text/plain"===t.dataTransfer.types[0]&&(t.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))},e.prototype.dragLeaveHandler=function(t){this.element.querySelector("ul").classList.remove("droppable")},e.prototype.dropHandler=function(t){var e=t.dataTransfer.getData("text/plain");l.moveProject(e,"active"===this.type?r.Active:r.Finished)},e.prototype.renderProjects=function(){document.getElementById(this.type+"-projects-list").innerHTML="";for(var t=0,e=this.assignedProjects;t<e.length;t++){var n=e[t];new v(this.element.querySelector("ul").id,n)}},e.prototype.renderContent=function(){var t=this.type+"-projects-list";this.element.querySelector("ul").id=t,this.element.querySelector("h2").textContent=this.type.toUpperCase()+"PROJECTS"},e.prototype.configure=function(){var t=this;this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("drop",this.dropHandler),l.addListener((function(e){var n=e.filter((function(e){return"active"===t.type?e.status===r.Active:e.status===r.Finished}));t.assignedProjects=n,t.renderProjects()}))},g([u],e.prototype,"dragOverHandler",null),g([u],e.prototype,"dragLeaveHandler",null),g([u],e.prototype,"dropHandler",null),e}(o);new h,new j("active"),new j("finished")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,